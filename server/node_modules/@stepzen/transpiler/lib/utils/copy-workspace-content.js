"use strict";
// Copyright IBM Corp. 2020, 2024
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllGraphQLFiles = void 0;
const fsx = require("fs-extra");
const glob = require("glob");
const path = require("path");
const lodash_1 = require("lodash");
const constants_1 = require("./constants");
const WORKSPACE_FILE_PATTERNS = [
    '**/*.graphql',
    'stepzen.config.json',
    'config.yaml',
];
const IGNORED_PATTERNS = ['node_modules/**'];
/**
 * Copy StepZen workspace content from one directory to another.
 *
 * Include only the files relevant to StepZen:
 *  - **â€‹/*.graphql
 *  - config.yaml
 *  - stepzen.config.json
 *
 * Exclude all other files.
 * Exclude special folders, e.g. node_modules
 */
exports.default = (srcPath, dstPath) => {
    if (!fsx.existsSync(srcPath)) {
        throw new Error(`Cannot find source directory ${srcPath}`);
    }
    (0, lodash_1.flatMap)(WORKSPACE_FILE_PATTERNS, pattern => glob.sync(pattern, {
        cwd: srcPath,
        ignore: IGNORED_PATTERNS,
    })).forEach(relativePath => {
        const srcFileFullPath = path.join(srcPath, relativePath);
        const dstFileFullPath = path.join(dstPath, relativePath);
        fsx.ensureDirSync(path.dirname(dstFileFullPath));
        fsx.copyFileSync(srcFileFullPath, dstFileFullPath);
    });
};
const getAllGraphQLFiles = (srcPath) => {
    return glob
        .sync(constants_1.ALL_GRAPHQL_FILES, { cwd: srcPath })
        .filter(file => file !== 'index.graphql');
};
exports.getAllGraphQLFiles = getAllGraphQLFiles;
//# sourceMappingURL=copy-workspace-content.js.map