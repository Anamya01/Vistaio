"use strict";
// Copyright IBM Corp. 2020, 2024
Object.defineProperty(exports, "__esModule", { value: true });
const fsx = require("fs-extra");
const os = require("os");
const path = require("path");
const shell = require("shelljs");
const stitch_1 = require("../actions/stitch");
const merge_helpers_1 = require("../utils/merge-helpers");
const rmtemp_1 = require("../utils/rmtemp");
exports.default = async (source, options = {
    extensions: '',
}) => {
    if (!fsx.existsSync(source)) {
        throw new Error(`Cannot find source directory ${source}`);
    }
    let extensions = options.extensions;
    if (!extensions) {
        extensions = await (0, merge_helpers_1.getExtensions)();
    }
    let stitched, tmp;
    try {
        stitched = (0, stitch_1.default)(source);
        const index = path.join(stitched, 'index.graphql');
        const graphql = fsx.readFileSync(index, 'utf8');
        tmp = path.join(os.tmpdir(), `stepzen-lint-${Date.now()}`);
        fsx.ensureDirSync(tmp, 0o700);
        const lintFile = path.join(tmp, 'index.graphql');
        fsx.writeFileSync(lintFile, `${extensions}${os.EOL}${os.EOL}${graphql}`);
        const { stdout } = shell.exec(`npx graphql-schema-linter ${lintFile}`, {
            silent: true,
        });
        console.log(stdout);
    }
    finally {
        (0, rmtemp_1.rmtemp)(stitched);
        (0, rmtemp_1.rmtemp)(tmp);
    }
};
//# sourceMappingURL=lint.js.map