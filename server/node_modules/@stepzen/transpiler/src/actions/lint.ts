// Copyright IBM Corp. 2020, 2024

import * as fsx from 'fs-extra'
import * as os from 'os'
import * as path from 'path'
import * as shell from 'shelljs'

import stitch from '../actions/stitch'
import {getExtensions} from '../utils/merge-helpers'
import {rmtemp} from '../utils/rmtemp'

export default async (
  source: string,
  options: {
    extensions: string
  } = {
    extensions: '',
  },
) => {
  if (!fsx.existsSync(source)) {
    throw new Error(`Cannot find source directory ${source}`)
  }

  let extensions = options.extensions

  if (!extensions) {
    extensions = await getExtensions()
  }

  let stitched, tmp
  try {
    stitched = stitch(source)
    const index = path.join(stitched, 'index.graphql')
    const graphql = fsx.readFileSync(index, 'utf8')

    tmp = path.join(os.tmpdir(), `stepzen-lint-${Date.now()}`)
    fsx.ensureDirSync(tmp, 0o700)
    const lintFile = path.join(tmp, 'index.graphql')
    fsx.writeFileSync(lintFile, `${extensions}${os.EOL}${os.EOL}${graphql}`)

    const {stdout} = shell.exec(`npx graphql-schema-linter ${lintFile}`, {
      silent: true,
    })
    console.log(stdout)
  } finally {
    rmtemp(stitched)
    rmtemp(tmp)
  }
}
