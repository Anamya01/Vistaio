import ZenCommand from '../shared/zen-command';
import type { OperationDefinitionNode } from 'graphql';
export default class Request extends ZenCommand {
    static description: string;
    static flags: {
        dir: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        endpoint: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        header: import("@oclif/core/lib/interfaces").OptionFlag<string[] | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'operation-name': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        var: import("@oclif/core/lib/interfaces").OptionFlag<string[] | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'var-file': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        file: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        help: import("@oclif/core/lib/interfaces").BooleanFlag<void>;
        'non-interactive': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    static args: {
        query: import("@oclif/core/lib/interfaces/parser").Arg<string | undefined, Record<string, unknown>>;
    };
    run(): Promise<void>;
    getRequestQuery(queryArg: string | undefined, queryFlag: string | undefined): string;
    getRequestOperation(query: string, operationName?: string): OperationDefinitionNode;
    getRequestVariables(opdef: OperationDefinitionNode, variableFlags?: string[], varFileFlag?: string): Record<string, any>;
    getAdditionalRequestHeaders(headerFlagValues?: string[]): {
        added: Record<string, string>;
        removed: string[];
    };
}
//# sourceMappingURL=request.d.ts.map