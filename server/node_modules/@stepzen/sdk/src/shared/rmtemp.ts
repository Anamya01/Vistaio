// Copyright IBM Corp. 2020, 2024

import * as fs from 'fs'
import * as path from 'path'
import * as os from 'os'
import * as debug from 'debug'

// ----------------------------------------------------------------------------
//      THIS ENTIRE FILE IS COPIED FROM packages/cli/src/shared/rmtemp.ts
// (because there is no effective way to share util classes between packages yet)
// ----------------------------------------------------------------------------

/**
 * Verify that the given path is indeed inside the tmp folder,
 * and delete it recursively suppressing any errors.
 *
 * If the given path is not inside the tmp folder, do nothing.
 *
 * @param {*} fileOrDirPath path to a temp file or folder to delete
 */
export const rmtemp = (fileOrDirPath?: string) => {
  if (!fileOrDirPath) {
    return
  }

  // https://stackoverflow.com/a/45242825
  const relative = path.relative(os.tmpdir(), fileOrDirPath)
  const isInTemp =
    relative && !relative.startsWith('..') && !path.isAbsolute(relative)

  if (isInTemp) {
    try {
      fs.rmSync(fileOrDirPath, {recursive: true, force: true})
    } catch (error) {
      // ignore errors
      debug('stepzen:rmtemp')(
        `WARN: caught an exception while deleting ${fileOrDirPath}: `,
        error,
      )
    }
  } else {
    debug('stepzen:rmtemp')(
      `WARN: got a temp path ${fileOrDirPath} out of the TMP folder -- ignoring`,
    )
  }
}

export default rmtemp
