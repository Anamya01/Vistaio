import ZenCommand from '../../shared/zen-command';
import type { ArgOutput, FlagOutput, Input, ParserOutput } from '@oclif/core/lib/interfaces/parser';
export default class Import extends ZenCommand {
    static description: string;
    static flags: {
        dir: import("@oclif/core/lib/interfaces/parser").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        help: import("@oclif/core/lib/interfaces/parser").BooleanFlag<void>;
        'non-interactive': import("@oclif/core/lib/interfaces/parser").BooleanFlag<boolean>;
    };
    static args: {
        source: import("@oclif/core/lib/interfaces/parser").Arg<string | undefined, Record<string, unknown>>;
    };
    run(): Promise<unknown>;
    protected parse<F extends FlagOutput, B extends FlagOutput, A extends ArgOutput>(options?: Input<F, B, A>, argv?: string[]): Promise<ParserOutput<F, B, A> & {
        argv: string[];
    }>;
    parseSourceArg(arg: string): {
        source: string;
        dsn: string | undefined;
    };
}
//# sourceMappingURL=index.d.ts.map