"use strict";
// Copyright IBM Corp. 2020, 2024
Object.defineProperty(exports, "__esModule", { value: true });
exports.transpileConfigurationset = void 0;
const dotenv = require("dotenv");
const debug = require("debug");
const fsx = require("fs-extra");
const os = require("os");
const path = require("path");
const transpiler_1 = require("@stepzen/transpiler");
const rmtemp_1 = require("./rmtemp");
async function transpileConfigurationset(file) {
    if (!file) {
        return;
    }
    const source = file.substring(0, file.lastIndexOf('/'));
    debug('stepzen:dotenv')(`loading .env from ${path.resolve(source)}` +
        `, at sdk/src/shared/transpiling.ts`);
    dotenv.config({ path: path.resolve(source, '.env') });
    const tmp = path.join(os.tmpdir(), `stepzen-transpiler-${Date.now()}`);
    const configPath = path.join(tmp, 'config.yaml');
    fsx.ensureDirSync(tmp, 0o700);
    try {
        fsx.copyFileSync(file, configPath);
        fsx.chmodSync(configPath, 0o600);
        const result = await (0, transpiler_1.transpile)(tmp);
        fsx.emptyDirSync(tmp);
        fsx.writeFileSync(configPath, result.config || '', { mode: 0o600 });
        return configPath;
    }
    catch (error) {
        (0, rmtemp_1.rmtemp)(tmp);
        throw error;
    }
}
exports.transpileConfigurationset = transpileConfigurationset;
//# sourceMappingURL=transpiling.js.map