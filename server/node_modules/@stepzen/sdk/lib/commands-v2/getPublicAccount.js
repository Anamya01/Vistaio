"use strict";
// Copyright IBM Corp. 2020, 2024
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_client_1 = require("../shared/graphql-client");
exports.default = async ({ token, deploymentType, sdkConfig, }) => {
    const url = new URL(sdkConfig.publicAccountApiUrl);
    // Include the token into the URL so that it is visible in the logs
    // (allows StepZen to do analytics based on the GCP logs).
    url.searchParams.set('token', token);
    const { data, errors } = await (0, graphql_client_1.fetchPublicAccountGraphQLQuery)({
        url,
        query: `query (
      $token: String!
    ) {
      account: getAccountDetails(
        token: $token
      ) {
        account: accountName
        adminKey
        apiKey
      }
    }`,
        variables: {
            token,
        },
        sdkConfig,
    });
    if (errors) {
        // strip graphql-specific error details, leave only the message
        const message = errors.map(error => error.message).join('\n');
        return {
            data: undefined,
            error: { message },
        };
    }
    return {
        data: {
            account: data.account.account,
            adminKey: data.account.adminKey,
            apiKeys: [data.account.apiKey],
            deploymentType,
        },
        error: undefined,
    };
};
//# sourceMappingURL=getPublicAccount.js.map