import ZenCommand from '../shared/zen-command';
import { FlagsT, Workspace } from '../shared/types';
import { GraphiQLDashboardType } from '../shared/utils';
export default class Start extends ZenCommand {
    static description: string;
    static flags: {
        dir: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        endpoint: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        dashboard: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        port: import("@oclif/core/lib/interfaces").OptionFlag<number, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'no-console': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'no-dashboard': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'no-init': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'no-validate': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'no-watcher': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        help: import("@oclif/core/lib/interfaces").BooleanFlag<void>;
        'non-interactive': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    run(): Promise<void>;
    deployOnce({ workspace, flags, }: {
        workspace: Workspace;
        flags: Record<string, any>;
    }): Promise<boolean>;
    getGraphiQLType(hasWebDashboard: boolean, flags: FlagsT<typeof Start>): GraphiQLDashboardType;
}
//# sourceMappingURL=start.d.ts.map