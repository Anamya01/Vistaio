"use strict";
// Copyright IBM Corp. 2020, 2024
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportQuestions = void 0;
const chalk = require("chalk");
const url_helpers_1 = require("../shared/url-helpers");
/**
 * A helper to share interactive questions between several import commands.
 */
exports.ImportQuestions = {
    prefix: () => ({
        name: 'typePrefix',
        message: 'Prefix to add to all generated type names (leave blank for none)',
    }),
    dbHost: () => ({
        name: 'host',
        message: 'What is your host?',
        validate: input => (0, url_helpers_1.parseHost)(input).isValid || `Could not parse "${input}" as a hostname.`,
    }),
    dbUser: () => ({
        name: 'user',
        message: 'What is the username?',
        validate: input => input.trim() !== '' || 'Username must not be empty',
    }),
    dbPassword: () => ({
        name: 'password',
        message: 'What is the password?',
        type: 'password',
    }),
    dbDatabase: () => ({
        name: 'database',
        message: 'What is your database name?',
        validate: input => input.trim() !== '' || 'Database name must not be empty',
    }),
    dbSchema: (opts = {}) => ({
        name: 'schema',
        message: `What is your database schema${opts.required ? '' : ' (leave blank to use defaults)'}?`,
        validate: opts.required
            ? input => input.trim() !== '' || 'Schema must not be empty'
            : undefined,
    }),
    dbLinkTypes: () => ({
        name: 'linkTypes',
        message: `Automatically link types based on foreign key relationships using @materializer` +
            `\n ${chalk.dim('(https://stepzen.com/docs/features/linking-types)')}`,
        type: 'confirm',
        default: false,
    }),
};
//# sourceMappingURL=questions.js.map