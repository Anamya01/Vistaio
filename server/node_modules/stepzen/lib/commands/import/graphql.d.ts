import { ImportCommandBase } from '../../generate/import-command';
import type { GraphQL2SdlOptions } from '../../generate/graphql2sdl';
import type { CommonImportOptions } from '../../generate/import-command';
declare type InteractiveGraphQL2SdlOptions = Pick<GraphQL2SdlOptions, 'endpoint' | 'typePrefix' | 'includeRootOperations' | 'headers'>;
declare type GraphQLAnswers = {
    endpoint: string;
    typePrefix: string;
    includeRootOperations: boolean;
    header: string;
};
export default class ImportGraphQL extends ImportCommandBase {
    static description: string;
    get source(): "graphql";
    static flags: {
        prefix: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        header: import("@oclif/core/lib/interfaces").OptionFlag<string[] | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'header-param': import("@oclif/core/lib/interfaces").OptionFlag<string[] | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        dir: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        silent: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        name: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        overwrite: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        help: import("@oclif/core/lib/interfaces").BooleanFlag<void>;
        'non-interactive': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    static args: {
        url: import("@oclif/core/lib/interfaces/parser").Arg<string | undefined, Record<string, unknown>>;
    };
    protected import(commonOptions: CommonImportOptions): Promise<import("../../shared/types").ErrorOr<import("../../generate/helpers").IntrospectionServiceResponse, {
        message: string;
    }>>;
    getImportOptionsInteractively(defaults?: Partial<GraphQLAnswers>): Promise<InteractiveGraphQL2SdlOptions>;
}
export {};
//# sourceMappingURL=graphql.d.ts.map